import jsPDF from 'jspdf';
import { Invoice } from '../types';

export const generateInvoicePDF = (invoice: any) => {
  const doc = new jsPDF();
  
  // Set up document properties
  doc.setProperties({
    title: `Invoice ${invoice.invoiceNumber}`,
    subject: 'Sales Invoice',
    author: 'InvBill Pro',
  });

  // Header
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('INVOICE', 20, 30);
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text('InvBill Pro - Inventory & Billing Management', 20, 40);
  
  // Invoice details
  doc.setFont('helvetica', 'bold');
  doc.text(`Invoice #: ${invoice.invoiceNumber}`, 140, 30);
  doc.setFont('helvetica', 'normal');
  doc.text(`Date: ${new Date(invoice.createdAt).toLocaleDateString('en-IN')}`, 140, 40);
  
  // Customer details
  doc.setFont('helvetica', 'bold');
  doc.text('Bill To:', 20, 60);
  doc.setFont('helvetica', 'normal');
  doc.text(invoice.customerName, 20, 70);
  
  if (invoice.customerEmail) {
    doc.text(`Email: ${invoice.customerEmail}`, 20, 80);
  }
  
  if (invoice.customerPhone) {
    doc.text(`Phone: ${invoice.customerPhone}`, 20, 90);
  }

  // Table header
  const startY = 110;
  doc.setFont('helvetica', 'bold');
  doc.text('Item', 20, startY);
  doc.text('Qty', 100, startY);
  doc.text('Price (₹)', 130, startY);
  doc.text('Total (₹)', 170, startY);
  
  // Draw line under header
  doc.line(20, startY + 5, 190, startY + 5);
  
  // Table content
  doc.setFont('helvetica', 'normal');
  let currentY = startY + 15;
  
  invoice.items.forEach((item: any) => {
    doc.text(item.productName, 20, currentY);
    doc.text(item.quantity.toString(), 100, currentY);
    doc.text(formatCurrency(item.priceINR), 130, currentY);
    doc.text(formatCurrency(item.totalINR), 170, currentY);
    currentY += 10;
  });
  
  // Totals section
  currentY += 10;
  doc.line(130, currentY, 190, currentY);
  currentY += 10;
  
  doc.text('Subtotal:', 130, currentY);
  doc.text(formatCurrency(invoice.subtotalINR), 170, currentY);
  currentY += 8;
  
  if (invoice.discountINR > 0) {
    doc.text('Discount:', 130, currentY);
    doc.text(`-${formatCurrency(invoice.discountINR)}`, 170, currentY);
    currentY += 8;
  }
  
  doc.text('GST (18%):', 130, currentY);
  doc.text(formatCurrency(invoice.taxINR), 170, currentY);
  currentY += 8;
  
  doc.setFont('helvetica', 'bold');
  doc.text('Total:', 130, currentY);
  doc.text(formatCurrency(invoice.totalINR), 170, currentY);
  
  // Footer
  doc.setFont('helvetica', 'normal');
  doc.setFontSize(10);
  doc.text('Thank you for your business!', 20, 270);
  doc.text('Generated by InvBill Pro', 20, 280);
  
  // Save the PDF
  doc.save(`invoice-${invoice.invoiceNumber}.pdf`);
};

const formatCurrency = (amount: number) => {
  return new Intl.NumberFormat('en-IN', {
    style: 'currency',
    currency: 'INR',
  }).format(amount);
};